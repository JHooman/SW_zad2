name: sw_zad2

on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'

jobs:
  ci_step:
    name: Build, tag and push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source_repo
        uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ vars.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}
      - name: QEMU set-up
        uses: docker/setup-qemu-action@v3
      - name: Buildx set-up
        uses: docker/setup-buildx-action@v3
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/jhooman/sw_zad2
          flavour: latest=false
          labels:
            org.opencontainers.image.source="https://github.com/jhooman/sw_zad2"
          tags: |
            type=semver,priority=200,pattern={{version}}
            type=sha,priority=100,prefix=sha-,format=short
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          sbom: true
          provenance: mode=max
          push: true
          cache-from: |
            type=registry,ref=ghcr.io/${{ vars.DOCKERHUB_USERNAME }}/sw_zad2_cache:cache
          cache-to: |
            type=registry,ref=ghcr.io/${{ vars.DOCKERHUB_USERNAME }}/sw_zad2_cache:cache
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Extract SHA Tag
        run: echo "IMAGE_TAG=$(echo '${{ steps.meta.outputs.tags }}' | grep -o 'ghcr.io/jhooman/sw_zad2:sha-[a-f0-9]*')" >> $GITHUB_ENV
      - name: Scan with trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_TAG }}
          severity: HIGH,CRITICAL
          exit-code: 1
          format: table
      - name: Push Docker Image
        if: success()
        run: |
          docker buildx imagetools create --tag ghcr.io/adrianw246/last-image:latest  ${{ steps.meta.outputs.tags }}
